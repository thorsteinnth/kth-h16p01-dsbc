Chordy: A distributed hash table

Implement chord storage
First implementation just a ring structure
Can add nodes to the ring but not add any elements to the store

Bæta svo failure detection í kerfið
ATH að við tröckum bara einn successor en actual chordy trackar nokkra

Replication í storeinu til að replicate-a data ef nodes deyja
"That will take care of some problems but does it actually work?"

Það þarf í raun ekki finger table í network of 20 nodes
(finger tables leyfa okkur að finna any given key in log(n) hops)
(annars linear search ef þær eru ekki til staðar)

If you also want to implement mutable objects you will be faced with
a challenge. Hvernig update-ar maður object (consistently) ef hann er
replicated? Some nodes might be unavailable during node insertion and failures.
To solve this you will have to do some more reading.

-----------------------------------------------------------------------------------

1 Building a ring

Notum ekki hash function heldur bara random number sem er generated þegar new key
er generated
Engin "names" á nodes, bara random numbers sem við vonum að séu unique.
"Using a hash function such as SHA-1 would give us 160 bits and allow us to have
human readable names on object but let’s keep things simple."

Key module:
TODO
Remember that the we’re dealing with a ring so it could be that From is larger than To.
What does that mean and how do you handle it?

TODO
If you study the Chord paper you will find that they explain things slightly different.
We use our key:between/3 function that allows the key Xkey to be equal to Skey,
not strictly according to the paper.
Does this matter? What does it mean that Xkey is equal to Skey, will it ever happen?

TODO
What are the pros and cons of a more frequent stabilizing procedure?
What is delayed if we don’t do stabilizing that often?

TODO
notify/3
Do we need a special case to detect that we’re pointing to ourselves?
Do we have to inform the new node about our decision?
How will it know if we have discarded its friendly proposal?

TODO
What would happen if we didn’t schedule the stabilize procedure (when a node is started)?
Would things still work?

---------------------------------------------------------------------------------------------------

111016 0023
Eitthvað rugl í stabilize

[<0.70.0>] ENTERED STABILIZE WITH SUCCESSOR ARG AS: {notify,
                                                     {443584618,<0.70.0>}}
[<0.71.0>] ENTERED STABILIZE WITH SUCCESSOR ARG AS: {notify,
                                                     {723040206,<0.71.0>}}
[<0.72.0>] ENTERED STABILIZE WITH SUCCESSOR ARG AS: {notify,
                                                     {945816365,<0.72.0>}}
[<0.73.0>] ENTERED STABILIZE WITH SUCCESSOR ARG AS: {notify,
                                                     {501490715,<0.73.0>}}
[<0.74.0>] ENTERED STABILIZE WITH SUCCESSOR ARG AS: {notify,
                                                     {311326755,<0.74.0>}}
[<0.75.0>] ENTERED STABILIZE WITH SUCCESSOR ARG AS: {notify,
                                                     {597447525,<0.75.0>}}
[<0.70.0>] TRYING TO SEND REQUEST TO: {443584618,<0.70.0>}
[<0.71.0>] TRYING TO SEND REQUEST TO: {723040206,<0.71.0>}
[<0.72.0>] TRYING TO SEND REQUEST TO: {945816365,<0.72.0>}
[<0.73.0>] TRYING TO SEND REQUEST TO: {501490715,<0.73.0>}
[<0.74.0>] TRYING TO SEND REQUEST TO: {311326755,<0.74.0>}
[<0.75.0>] TRYING TO SEND REQUEST TO: {597447525,<0.75.0>}

=ERROR REPORT==== 11-Oct-2016::00:22:02 ===
Error in process <0.70.0> with exit value:
{badarg,[{node1,stabilize,1,[{file,"node1.erl"},{line,182}]},
         {node1,node,3,[{file,"node1.erl"},{line,81}]}]}

Vandinn var að ég var ekki að returna successor úr stabilize/3

---------------------------------------------------------------------------------------------------
