The http:get("foo") line in the test module, is it actually doing anything?
Or isn't this just bypassing everything else in the module?

NOPE:
If I print out what the test program is getting from the server I get:

HTTP/1.1 200 OK

THIS IS THE RESPONSE

So ... the get() function in the http module is just returning a formed GET XXX string that is then sent to the server.

Note that the server is using passive sockets. Then we have to use recv to read data (blocking). We could use
active sockets and then receive the data as messages from the socket.
This would allow us to also receive control messages from a controlling process, to for instance kill the server.

Going further:
Bonus points:
Implement at least one of the improvements.

1. Increasing throughput
Concurrently handle requests -> multithreading

Made a thread pool which assigns workers from a pool and queues work if the pool is full.
The test function is sequential? Doesn't make a new request until the first one finishes.
Using loadtest (https://www.npmjs.com/package/loadtest) instead for all tests.

TESTS

loadtest -c 100 -n 100  http://localhost:8080/foo
(100 concurrent requests)
